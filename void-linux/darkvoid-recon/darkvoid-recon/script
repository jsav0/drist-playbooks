#!/bin/sh

## CHANGE ME
DOCTL_API_KEY="588dd26a2c258813a02287aad5b260a3e410e95cd721256e3a0bae2c5f8596ef"
timer="20 minutes" #self-destruct


install_packages(){
	# custom xbps pkgs from drist temporary dir
	mkdir -p /home/void/pkgs
	cp -u /home/void/.drist_files_*/pkgs/* /home/void/pkgs/ && echo "copied custom pkgs succesfully"

	# common 
	common="xtools curl libcurl-devel wget gcc make cmake git strace neovim tmux jq fish-shell at doctl tor"

	# tools
	toolz="\
		docker \
		masscan \
		nmap \
		subfinder"

	# update
	xbps-install -Suy

	# install packages
	xbps-install -uy $common $toolz

	# nuclei (github.com/projectdiscovery/nuclei)
	# nuclei templates (https://github.com/projectdiscovery/nuclei-templates)
	# Basic usage: nuclei -l targets.txt -t files/ -t cves/ 
	printf "\ninstalling nuclei and templates..\n"
	ls /usr/local/bin/nuclei 2>/dev/null || wget https://github.com/projectdiscovery/nuclei/releases/download/v2.1.1/nuclei_2.1.1_linux_amd64.tar.gz -qO - | sudo tar xzvf - -C /usr/local/bin/ nuclei >/dev/null
	[ -d /opt/nuclei-templates ] && {
		cd /opt/nuclei-templates
		git config pull.rebase false;git pull >/dev/null
	} || {
		git clone https://github.com/projectdiscovery/nuclei-templates /opt/nuclei-templates 2>/dev/null
	}

	printf "\ninstalling httpx...\n"
	echo "Y" | xdowngrade /home/void/pkgs/httpx-*.xbps

}

enable_services(){
	# enable docker
	usermod -aG docker void
	ln -sf /etc/sv/docker /var/service/

	# enable at
	ln -sf /etc/sv/at /var/service

	# enable tor
	ln -sf /etc/sv/tor /var/service

}

configure(){
	# bashrc
	# printf exec fish >/home/void/.bashrc
	cat <<- EOF >/home/void/.bashrc
		exec fish
	EOF

	# fish config
	mkdir -p /home/void/.config/fish
	printf "source ~/.config/fish/aliases.fish\n" > /home/void/.config/fish/config.fish
	cat <<- EOF >/home/void/.config/fish/aliases.fish
		alias get_resolver_list 'docker run --init -v (pwd):/dnsvalidator/output -it wfnintr/dnsvalidator -tL https://public-dns.info/nameservers.txt -threads 20 -o /dnsvalidator/output/resolvers.txt'
	EOF
	
	# install sshkey to root
	mkdir -p $HOME/.ssh && cp /home/void/.ssh/authorized_keys $HOME/.ssh/authorized_keys && {
		printf "\nDone. SSH key copied to root.\n"
	}
	chown -R void:void /home/void

}



install_packages && enable_services && configure # && reboot

reboot(){
	# self-destruct function
	doctl auth init -t $DOCTL_API_KEY >/dev/null
	#read timer < /tmp/explode-timer
	echo "doctl compute droplet delete -f $(curl -s http://169.254.169.254/metadata/v1/id)" | at now + ${timer:-30 minutes} 
	printf "\nConfigure self destruct in %s..." "$timer"
	
#	printf "Rebooting...\n" && init 6
}

