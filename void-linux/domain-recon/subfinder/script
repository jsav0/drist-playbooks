#!/bin/sh
# n0
# passive subdomain enumeration recon script
# inteded use on Raspberry Pis or VPS instances
# a110w

install_packages(){
	# I've chosen to install pkgs from xbps and binaries where possible, otherwise from source
	# some versions will need to updated manually. sigh. If i have time i'll try to build xbps templates for more of these tools or something.. 

	# install packages from xbps	
	sudo xbps-install -Sy wget git go gcc make subfinder jq Amass
	
	# install custom xbps pkgs, not provided by repo
	# sudo xbps-install -Sy xtools && echo "Y" | sudo xdowngrade *.xbps 

	# install shuffledns
	ls /usr/local/bin/shuffledns || {
		wget https://github.com/projectdiscovery/shuffledns/releases/download/v1.0.4/shuffledns_1.0.4_linux_amd64.tar.gz -qO - | sudo tar xzvf - -C /usr/local/bin shuffledns
	}

	# install massdns 
	ls /usr/local/bin/massdns || {
		git clone https://github.com/blechschmidt/massdns massdns && {
			cd massdns && make && sudo cp bin/massdns /usr/local/bin/ && cd - && rm -rf massdns
		}
	}

	# install findomain
	ls /usr/local/bin/findomain || {
		sudo wget https://github.com/Findomain/Findomain/releases/download/2.1.4/findomain-linux -qO /usr/local/bin/findomain && sudo chmod +x /usr/local/bin/findomain
	}

	# install assetfinder
	ls /usr/local/bin/assetfinder || {
		wget https://github.com/tomnomnom/assetfinder/releases/download/v0.1.0/assetfinder-linux-amd64-0.1.0.tgz -qO - | sudo tar xzvf - -C /usr/local/bin assetfinder
	}
}


enumerate(){
	# start enumerating subdomains, passively
	# yes, a lot of these tools have overlapping sources.
	
	target=$1
	resolvers=dnsresolvers.txt
	mkdir -p results # when executed over ssh, my modified copy of drist copies this directory back to the local client when the script finishes

	# get list of public resolvers
	curl -sSL https://gist.githubusercontent.com/jsav0/8760362bb6a6542d60deedd905d67e93/raw/ea8a89446da942800c728ff8491d029ea6de4448/dnsresolvers.txt -o dnsresolvers.txt

	# subfinder: scrape domains from sources using custom dns resolvers w/ 100 threads 
	subfinder -silent -rL $resolvers -t 100 -d $target > results/subfinder.txt 

	# findomain: scrape domains from sources using custom dns resolvers with 100 threads
	findomain --resolvers $resolvers --threads 100 -qt $target > results/findomain.txt

	# crt.sh: scrape domains from certificate search database
	curl -s "https://crt.sh/?q=$target&output=json" | jq -r '.[].name_value' | sed 's/\*\.//g' > results/crt.txt 
	
	# assetfinder: scrape domains from sources
	assetfinder --subs-only $target > results/assetfinder.txt 

	# amass: scrape domains from sources 
	amass enum -passive -norecursive -noalts -d $target -o results/amass.txt
}


install_packages && {
	enumerate $1 && {
		# concatenate all results, and then return only unique and valid subdomains
		cat results/* | sort -u | shuffledns -silent -r $resolvers -t 100 -d $1 | sort -u > results/subdomains.txt
		#cat results/subdomains_resolved.txt | dnsprobe -silent -r A | sort -u > results/all_ipv4_hosts.txt
	}
} 


