#!/bin/sh
# n0
# this script provisions a void linux host for recon and offensive hacking
# author: wfnintr@null.net
# a110w

common_utils="\
	fish-shell \
	git \
	bind-utils \
	p7zip \



"

web_toolz="\
	ffuf
"

toolz="\
	nmap \
	masscan \
	bind-utils \



"


download_wordlists(){
	# there may be some redundancy here among the wordlists, fyi 
	# github.com/six2dez/OneListForALL
	curl -sSL https://github.com/six2dez/OneListForAll/releases/download/v0.2/onelistforall.txt -o /usr/share/wordlists/onelistforall.txt
	# github.com/danielmiessler/SecLists
	wget https://github.com/danielmiessler/SecLists/archive/2020.4.tar.gz -O - | tar xzvf - -C /usr/share/wordlists/
	# github.com/jhaddix
	curl -sL https://gist.githubusercontent.com/jhaddix/86a06c5dc309d08580a018c66354a056/raw/96f4e51d96b2203f19f6381c8c545b278eaa0837/all.txt -o /usr/share/wordlists/all.txt
}


# xbps packages 
common_utils="\
	bind-utils \
	curl \
	docker \
	fish-shell \
	git \
	go \
	gcc \
	inetutils \
	make \
	mosh \
	neovim \
	nmap \
	openbsd-netcat \
	pkg-config \
	python3 \
	python3-pip \
	python-setuptools \
	sshuttle \
	tcpdump \
	tor \
	proxychains-ng \
	p7zip \
	whois \
	wget \
	wireguard-tools \
	"
	
toolz="\
	Amass \
	fierce \
	termshark \
	john \
	thc-hydra \
	masscan \
	net-snmp \
	gdb \
	binwalk \
	exiftool \
	wfuzz \
	gfuzz \
	gobuster \
	ffuf \
	sqlmap \
	smbclient \
	chromium \ # ffs, why is whktoimage not working!!!
	"


# bashrc
cat <<- EOF >/home/void/.bashrc
	export PATH=$HOME/go/bin:/usr/local/bin/:$PATH
	export EDITOR=/usr/bin/nvim
	exec fish
EOF

# fish, inherits ~/.bashrc
mkdir -p /home/void/.config/fish
printf "source ~/.config/fish/aliases.fish\n" >> /home/void/.config/fish/config.fish
cat <<- EOF >/home/void/.config/fish/aliases.fish
	alias dirsearch 'docker run -it --rm -v /usr/share/wordlists:/wordlists wfnintr/dirsearch'
	alias knockpy 'docker run --rm -t wfnintr/knockpy'
	alias resolver_list 'docker run -v (pwd):/dnsvalidator/output -t dnsvalidator -tL https://public-dns.info/nameservers.txt -threads 20 -o /dnsvalidator/output/resolvers.txt'
EOF

# update
xbps-install -Su

# install common utils
xbps-install -Suy $common_utils

# install toolz
xbps-install -Suy $toolz

# enable docker
usermod -aG docker void
ln -sf /etc/sv/docker /var/service/

# start tor, proxychains4 already configured
ln -sf /etc/sv/tor /var/service/

# install seclists
git clone https://github.com/danielmiessler/SecLists.git /usr/share/wordlists/seclists
curl -sL https://gist.githubusercontent.com/jhaddix/86a06c5dc309d08580a018c66354a056/raw/96f4e51d96b2203f19f6381c8c545b278eaa0837/all.txt -o /usr/share/wordlists/all.txt

# i built custom xbps packages for some of the tooling below, but until i get it officially accepted into the repository or setup my own, I will continue with binaries, go bloat and such

# install ciphey (https://github.com/Ciphey/Ciphey)
pip3 install ciphey

# findomain (github.com/Findomain/Findomain)
# Basic usage: findomain -rt example.com
wget -qO /usr/local/bin/findomain https://github.com/Edu4rdSHL/findomain/releases/latest/download/findomain-linux && chmod +x /usr/local/bin/findomain


# nuclei (github.com/projectdiscovery/nuclei)
# Basic usage: nuclei -target <host> -t <template> 
GO111MODULE=on go get -u -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei
nuclei -update-templates

# subfinder (github.com/projectdiscovery/subfinder)
# basic usage: subfinder -d <domain.tld>
wget --quiet https://github.com/projectdiscovery/subfinder/releases/download/v2.4.4/subfinder_2.4.4_linux_amd64.tar.gz -O - | sudo tar xzvf - -C /usr/local/bin/ subfinder

# naabu (github.com/projectdiscovery/naabu)
# Basic usage: naabu -host hackerone.com
#wget --quiet https://github.com/projectdiscovery/naabu/releases/download/v2.0.2/naabu_2.0.2_linux_amd64.tar.gz -O - | sudo tar xzvf - -C /usr/local/bin/ naabu
GO111MODULE=on go get -u -v github.com/projectdiscovery/naabu/v2/cmd/naabu

# httpx (github.com/projectdiscovery/httpx)
# Basic usage:
GO111MODULE=auto go get -u -v github.com/projectdiscovery/httpx/cmd/httpx


# crlfuzz (github.com/dwisiswant0/crlfuzz)
# Basic usage: crlfuzz -u "http://target"
wget --quiet https://github.com/dwisiswant0/crlfuzz/releases/download/v1.4.0/crlfuzz_1.4.0_linux_amd64.tar.gz -O - | sudo tar xzvf - -C /usr/local/bin/ crlfuzz

# gau (github.com/lc/gau)
# Fetch known URLs from AlienVault's Open Threat Exchange, the Wayback Machine, and Common Crawl
# Basic usage: gau -o <outfile> <domain>
# wget --quiet https://github.com/lc/gau/releases/download/v1.0.5/gau_1.0.5_linux_amd64.tar.gz -O - | sudo tar xzvf - -C /usr/local/bin gau
GO111MODULE=on go get -u -v github.com/lc/gau

# unfurl (github.com/tomnomnom/unfurl)
# Pull out bits of URLs provided on stdin 
# Basic usage: cat urls.txt | unfurl -u paths
go get -u github.com/tomnomnom/unfurl

# gospider
go get -u github.com/jaeles-project/gospider


# wraith (github.com/N0MoreSecr3ts/wraith)
mkdir -p $HOME/go/src && cd $HOME/go/src
[ ! -d wraith ] && {
	git clone https://github.com/N0MoreSecr3ts/wraith && {
		cd wraith && \
		make build
	}
}


# knockpy (removed in favour of docker container wfnintr/knockpy)
# basic usage:
#[ ! -d /usr/local/bin/knockpy ] && {
#	git clone https://github.com/guelfoweb/knock.git /usr/local/bin/knockpy && {
#		cd /usr/local/bin/knockpy && \
#		python setup.py install
#	}
#}

# install pspy
#mkdir -p /usr/share/linux-bin
#git clone https://github.com/DominicBreuker/pspy.git /tmp/pspy
#cd /tmp/pspy && {
#	/bin/bash -lc "/usr/local/go/bin/go get"
#	/bin/bash -lc "GOARCH=386 /usr/local/go/bin/go build" # build 32bit binary
#	cp pspy /usr/share/linux-bin/pspy32
#      	chmod 0755 /usr/share/linux-bin/pspy32
#	/bin/bash -lc "GOARCH=amd64 /usr/local/go/bin/go build" # build 64bit binary
#	cp pspy /usr/share/linux-bin/pspy64
#	chmod 0755 /usr/share/linux-bin/pspy64
#	cd -
#    	rm -rf /tmp/pspy /opt/go/bin/pspy
#}

# install xsser (https://github.com/epsylon/xsser.git)
#pip3 install pycurl bs4 geoip2 gobject cairocffi
#git clone https://github.com/epsylon/xsser.git /opt/xsser
#chmod 0755 /opt/xsser/xsser
#ln -sf /opt/xsser/xsser /usr/bin/xsser

# install peda 
#git clone https://github.com/longld/peda.git /home/void/.peda
#cat > /home/void/.gdbinit <<- EOF
#	source ~/.peda/peda.py
#EOF

# st terminfo
#tic -sx /tmp/st.info

# root ssh key
mkdir -p $HOME/.ssh && cp /home/void/.ssh/authorized_keys $HOME/.ssh/authorized_keys && {
	printf "\nDone. SSH key copied to root.\n"
}

printf "Rebooting...\n" && init 6
